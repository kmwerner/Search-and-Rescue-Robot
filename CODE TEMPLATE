//  ___  ___  _   __   _   ___  _              _ 
// | __|| __|/ | /  \ / | | __|(_) _ _   __ _ | |
// | _| | _| | || () || | | _| | || ' \ / _` || |
// |___||___||_| \__/ |_| |_|  |_||_||_|\__,_||_|
                                               
//Define Digital Pins - These match up with the motor shield pinout.
#define Ech2 0
#define Trg2 1
#define Ain2 2
#define Ain1 3
#define Bin1 4
#define Bin2 5
#define Trg4 6
#define Ech4 7
#define Grn 8
#define PWMA 9
#define PWMB 10
#define Red 11
#define Ech1 12
#define Trg1 13
//Define Analog Pins - These match up with the motor shield pinout.
#define Trg3 A5
#define Ech3 A4
#define Meas A3
#define Blue A2
#define Opt2 A1
#define Opt1 A0

char outPins[] = {Trg2, Ain2, Ain1, Bin1, Bin2, Trg4, Grn, PWMA, PWMB, Red, Trg1, Trg3, Blue,};
char inPins[] = {Ech2, Ech4, Ech1, Ech3, Meas, Opt2, Opt1};

char IRlist[] = {Opt1,Opt2};
char UStrg[] = {Trg1, Trg2, Trg3, Trg4};
char USech[] = {Ech1, Ech2, Ech3, Ech4};

void drive(int leftval, int rightval){
  //drive commands to run the motors. See motor controller datasheet.
  if(leftval==0){
    //Stop left motor
    digitalWrite(Ain1,LOW); digitalWrite(Ain2,LOW); analogWrite(PWMA,255);
  }else if(leftval>0){
    //Drive left motor forwards
    digitalWrite(Ain1,HIGH); digitalWrite(Ain2,LOW);
    if(leftval>255){leftval=255;}
    analogWrite(PWMA,leftval);
  }else if(leftval<0){
    //drive left motor in reverse
    leftval=-leftval; //invert input
    digitalWrite(Ain1,LOW);
    digitalWrite(Ain2,HIGH);
    if(leftval>255){leftval=255;}
    analogWrite(PWMA,leftval);
  }
  if(rightval==0){
    //Stop right motor
    digitalWrite(Bin1,LOW); digitalWrite(Bin2,LOW); analogWrite(PWMB,255);
  }else if(rightval>0){
    //Drive right motor forwards
    digitalWrite(Bin1,HIGH); digitalWrite(Bin2,LOW);
    if(rightval>255){rightval=255;}
    analogWrite(PWMB,rightval);
  }else if(rightval<0){
    //drive right motor in reverse
    rightval=-rightval; //invert input
    digitalWrite(Bin1,LOW);
    digitalWrite(Bin2,HIGH);
    if(rightval>255){rightval=255;}
    analogWrite(PWMB,rightval);
  }
}

bool checkIR(int identity){ //Returns TRUE if opt is on a black line
  int IRvalue = analogRead(IRlist[identity]);
  if(IRvalue<10){return false;}
  else{return true;}
}

byte checkUS(int identity){ //Returns 0-255 cm distance measured on US
  digitalWrite(UStrg[identity],LOW);
  delayMicroseconds(2);
  digitalWrite(UStrg[identity],HIGH);
  delayMicroseconds(10);
  digitalWrite(UStrg[identity],LOW);
  long duration = pulseIn(USech[identity],HIGH);
  long distance = duration/58.2;
  return(distance);
}

void setup() {
  // put your setup code here, to run once:
  for(int i=0; i<sizeof(outPins);i++){pinMode(outPins[i],OUTPUT);} //initialize output pins
  for(int i=0; i<sizeof(inPins);i++){pinMode(inPins[i],INPUT);}    //initialize input  pins
  
}

void loop() {
  /*
  if (checkIR1() == true); {
  drive(20,55);
  delay(200);
  }
  else {
  drive();
  }
  /* long secondultra = checkUS2();
  Serial.print("Second Ultra: ");
  Serial.println(secondultra);
  delay(500);
  if(secondultra==0){secondultra=200;}    
  if(secondultra>40){
    drive(40,38);//drive forward (drive(50,50) or something like that)
    delay(100);
    Serial.println("WE AIN'T FOUND SHIT");
  }
  else{
    drive(0,0);
    delay(1000);
    Serial.println("TARGET ACQUIRED");
    drive(0,38); //turn to the left
    Serial.println("JIGGY TO THE LEFT");
    delay(700);  //wait
    drive(0,0);
    delay(1000); //POST JIGGY WAIT
    
    drive(40,35); //drive around object
    Serial.println("CHACHA Real smooth");
    delay(1000);
    drive(0,0); 
    delay(1000); //POST CHACHA WAIT
    
    drive(40,0); // turn right
    Serial.println("JIGGY TO THE RIGHT");
    delay(700); //wait --- check all these values)
    drive(0,0);
    delay(1000); //POST JIGGY WAIT
    
    secondultra=200;
  } */ //can be modified and repeated
  /* if (color = red || color = green && secondultra > 40)
  avoid block
  elseif(color = blue)
  send block out of arena
  if (IRflag() == true){ // when robot gets to black line
    drive(-50,-50);
    delay(2000);
    drive(-50,50);
    //tankright(50);
    delay(1000);
  } else {drivestraight(60);
  }
}
*/
